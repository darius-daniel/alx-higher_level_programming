=============================================================
Importing the add_integer() from 0-add_integer.py:
	>>> add_integer = __import__('0-add_integer').add_integer

=============================================================
If both a and b are positive integers:
	>>> print(add_integer(5, 5))
	10

=============================================================
If only one parameter is passed integers:
	>>> num = add_integer(10)
	>>> print(num)
	108

=============================================================
If a < 0 and b > 0:
	>>> print(add_integer(-20, 50))
	30

=============================================================
If a > 0 and b < 0:
	>>> print(add_integer(2, -5))
	-3

=============================================================
If a < 0 and b < 0:
	>>> print(add_integer(-1, -2))
	-3

	++++++++++++++++++++++++++++++++++++++++++++
=============================================================
If type(a) == float or type(b) == float:
	>>> print(add_integer(1.3, 5.5))
	6
	>>> print(add_integer(4, 0.5))
	4
	>>> print(add_integer(1.335))
	99

	++++++++++++++++++++++++++++++++++++++++++++
=============================================================
If either a or b (or both) is not an integer nor a float:
	>>> print(add_integer('5'))
	Traceback (most recent call last):
			...
	TypeError: a must be an integer

	+++++++++++++++++++++++++++++++++++++++++++
	>>> print(add_integer(100, '-2'))
	Traceback (most recent call last):
			...
	TypeError: b must be an integer

	+++++++++++++++++++++++++++++++++++++++++++
	>>> print(add_integer('4', '5'))
	Traceback (most recent call last):
			...
	TypeError: a must be an integer

	++++++++++++++++++++++++++++++++++++++++++++
===============================================================
If either a or b (or both) is None
	>>> print(add_integer(None))
	Traceback (most recent call last):
			...
	TypeError: a must be an integer

	++++++++++++++++++++++++++++++++++++++++++++
	>>> print(add_integer(22, None))
	Traceback (most recent call last):
		...
	TypeError: b must be an integer

	++++++++++++++++++++++++++++++++++++++++++++
	>>> print(add_integer(None, None))
	Traceback (most recent call last):
		...
	TypeError: a must be an integer

	++++++++++++++++++++++++++++++++++++++++++++
	===========================================================
